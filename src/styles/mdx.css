/* Define CSS variables for colors */
:root {
  --bg-color: rgb(30, 30, 30);
  --text-color: rgb(212, 212, 212);
  --highlight-bg: rgba(200, 200, 255, 0.1);
  --add-bg: rgba(46, 160, 67, 0.15);
  --add-border: rgba(46, 160, 67, 0.3);
  --add-symbol: rgb(61, 214, 140);
  --remove-bg: rgba(248, 81, 73, 0.15);
  --remove-border: rgba(248, 81, 73, 0.3);
  --remove-symbol: rgb(203, 118, 118);
}

/* rehype-pretty-code figure styles */
[data-rehype-pretty-code-figure] pre {
  @apply px-0;
  background-color: var(--bg-color);
  color: var(--text-color);
}

p:has(code:not([data-language="plaintext"])) {
  @apply flex items-start md:items-center flex-col md:flex-row;
}

[data-rehype-pretty-code-figure] > code {
  @apply px-1;
}

[data-rehype-pretty-code-figure] pre code {
  @apply grid min-w-full break-words border-none bg-transparent text-sm leading-loose text-black max-sm:pb-2;
  box-decoration-break: clone;
  counter-reset: line;
}

[data-rehype-pretty-code-figure] code[data-line-numbers] {
  counter-reset: line;
}

[data-rehype-pretty-code-figure] code[data-line-numbers] > [data-line] {
  @apply !pl-0;
}

[data-rehype-pretty-code-figure] code[data-line-numbers] > [data-line]::before {
  @apply pl-4 pr-2 text-right text-gray-500;
  counter-increment: line;
  content: counter(line);
}

[data-rehype-pretty-code-figure]
  code:not([data-language="plaintext"], [data-language="ansi"])
  > [data-line] {
  @apply px-3;
}

[data-rehype-pretty-code-figure] [data-chars-id] {
  @apply border-b-2 p-1 shadow-none;
}

[data-rehype-pretty-code-figure] [data-rehype-pretty-code-caption] {
  @apply text-lg;
}

/* rehype-pretty-code title styles */
[data-rehype-pretty-code-title] {
  @apply mt-4 rounded-t-md bg-gray-600 px-5 py-2 font-mono text-sm font-semibold text-gray-200;
}

[data-rehype-pretty-code-title] + pre {
  @apply mt-0;
}

[data-rehype-pretty-code-title] ~ div > pre {
  @apply mt-0 rounded-t-none;
}

/* Line styles within code block */
[data-rehype-pretty-code-figure] .line--highlighted {
  @apply border-l-[3px] !border-l-orange-400 dark:!border-l-orange-300;
  background: var(--highlight-bg);
}

[data-rehype-pretty-code-figure] .line--highlighted::before {
  @apply !pl-[0.85rem];
}

[data-rehype-pretty-code-figure] .word--highlighted {
  @apply mx-1 rounded-md bg-slate-300 bg-opacity-10 p-1;
}

/* Table of Contents (TOC) styles */
details[data-type="toc"] {
  @apply relative mb-4 select-none rounded-md border p-3 px-4;
  border-color: var(--tw-prose-hr);
}

summary:before {
  content: "";
  position: absolute;
  border-width: 0.4rem;
  border-style: solid;
  border-color: transparent transparent transparent #375141;
  top: 30px;
  transform: rotate(0);
  transform-origin: 0.2rem 50%;
  transition: 0.15s transform ease-in;
}

html.dark summary:before {
  border-color: transparent transparent transparent #d1d1d1;
}

details[open] > summary:before {
  transform: rotate(90deg);
}

details summary::marker {
  @apply hidden;
}

/* Subheading anchor styles */
.subheading-anchor {
  @apply no-underline;
}

.subheading-anchor::after {
  content: "#";
  @apply pl-1 pr-1 text-gray-500 opacity-0 transition-opacity ease-out;
}

.subheading-anchor:focus::after,
:hover > .subheading-anchor::after {
  @apply opacity-100;
}

html.dark .subheading-anchor::after {
  @apply text-gray-300;
}

[dir="ltr"] .subheading-anchor::after {
  @apply ml-1;
}

/* TOC title styles */
span.toc-title {
  @apply ml-4 cursor-pointer text-2xl;
}

/* Task list styles */
ul.contains-task-list {
  list-style-type: none;
  padding-left: 0;
}

/* Prose article paragraph styles */
article.prose > p {
  @apply text-xl leading-7 [&:not(:first-child)]:mt-6;
}

article.prose > p code {
  @apply relative top-[-2px] inline align-middle;
}

article.prose em {
  @apply italic;
}

article.prose .iframe-embed {
  @apply my-4;
}

article.prose mark {
  @apply bg-orange-300 px-1 mr-[2px];
}

/* Active tab trigger styles */
.TabsTrigger[data-state="active"] {
  @apply border-b-[1px] border-solid border-blue-500 font-bold;
  outline-offset: 2px;
  outline: 2px solid transparent;
}

/* diff style */
.has-diff code[data-line-numbers] > [data-line]::before {
  @apply mr-3;
}

.diff {
  @apply relative flex items-center;
}

.diff::before {
  @apply mr-4 flex justify-center;
  color: var(--text-color) !important;
}

.diff::after {
  @apply absolute left-12 select-none text-base;
}

.add {
  background-color: var(--add-bg);
}

.add::before {
  background-color: var(--add-border);
}

.add::after {
  content: "+";
  color: var(--add-symbol);
}

.remove {
  background-color: var(--remove-bg);
}

.remove::before {
  background-color: var(--remove-border);
}

.remove::after {
  content: "-";
  color: var(--remove-symbol);
}
